; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=5

[application]

config/name="GWJ85"
run/main_scene="uid://bf0e0l206u8xd"
config/features=PackedStringArray("4.4", "GL Compatibility")
config/icon="res://icon.svg"

[autoload]

SaveManager="*res://autoloads/saving/save_manager.gd"
MusicManager="*res://autoloads/audio/music_manager.tscn"
SoundManager="*res://autoloads/audio/sound_manager.tscn"
GameGlobal="*res://autoloads/general/game_global.gd"
GameGlobalEvents="*res://autoloads/general/game_global_events.gd"
CraftManager="*res://autoloads/production/CraftManager.tscn"
Inventory="*res://autoloads/production/inventory.tscn"
TileMapManager="*res://autoloads/general/tile_map_manager.gd"
RequestManager="*res://autoloads/production/request_manager.gd"
SceneManager="*res://autoloads/general/scene_manager.gd"
Debug="*res://autoloads/debug/debug.tscn"

[display]

window/size/viewport_width=640
window/size/viewport_height=360
window/size/resizable=false
window/size/window_width_override=1280
window/size/window_height_override=720
window/stretch/mode="canvas_items"
window/stretch/scale_mode="integer"

[dotnet]

project/assembly_name="GameJamTemplate"

[file_customization]

folder_colors={
"res://assets/": "pink",
"res://autoloads/": "yellow",
"res://mechanics/": "red",
"res://ui/": "green",
"res://utility/": "purple"
}

[global_group]

saveable="Nodes that should have the \"save()\" function and can thus be saved as data to a .save file"

[gui]

theme/custom="uid://b5ldjeqg05ylx"
theme/custom_font="uid://deajib16ve5y5"

[input]

debug={
"deadzone": 0.2,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":96,"key_label":0,"unicode":96,"location":0,"echo":false,"script":null)
]
}
turn_left={
"deadzone": 0.2,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":81,"key_label":0,"unicode":113,"location":0,"echo":false,"script":null)
]
}
turn_right={
"deadzone": 0.2,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":69,"key_label":0,"unicode":101,"location":0,"echo":false,"script":null)
]
}
pause={
"deadzone": 0.2,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":4194305,"key_label":0,"unicode":0,"location":0,"echo":false,"script":null)
]
}

[rendering]

textures/canvas_textures/default_texture_filter=0
renderer/rendering_method="gl_compatibility"
renderer/rendering_method.mobile="gl_compatibility"
